&НаСервере
Функция ВернутьКолвоПредметов()
	Возврат Перечисления.ПеречислениеПредметыПоступленияАбитуриентов.Количество(); 
КонецФункции

&НаСервере
Функция ВернутьЗначениеПредметаПоИндексу(индекс_номер)
	Возврат Перечисления.ПеречислениеПредметыПоступленияАбитуриентов.Получить(индекс_номер);
КонецФункции

&НаСервере
Процедура СоздатьДокументЗаявлениеНаПоступление()

   НовыйДокументШоражников = Документы.ЗаявлениеНаПоступление.СоздатьДокумент();
   НовыйДокументШоражников.ФИОАбитуриента = Объект.Наименование;
   НовыйДокументШоражников.СпециальностьАбитуриента = Объект.СпециальностьАбитурента;
   НовыйДокументШоражников.СреднийБаллАбитуриента = Объект.СреднийБаллАбитуриента;
   НовыйДокументШоражников.ТипАттестатаАбитуриента  = Объект.ТипАттестатаАбитуриента;
   НовыйДокументШоражников.ПриоритетЗачисленияАбитуриента = 
Объект.ПриоритетЗачисленияАбитуриента;
   НовыйДокументШоражников.ФормаОплатыАбитуриента = Объект.ФормаОплатыАбитуриента;
   НовыйДокументШоражников.Дата = ТекущаяДата();
   НовыйДокументШоражников.Записать(РежимЗаписиДокумента.Проведение);   
	
КонецПроцедуры

&НаСервере
Функция СоздатьОтчетTelegram()
	Данные = Справочники.TelegramBot.НайтиПоНаименованию("MAIN_BOT");
	Сообщение = "<b>Добавление нового абитуриента</b>"+Символы.ПС+
				"<i>ФИО: </i>"+Объект.Наименование+Символы.ПС+
				"<i>Сред. балл: </i>"+Объект.СреднийБаллАбитуриента+Символы.ПС+
				"<i>Специальность: 
</i>"+Объект.СпециальностьАбитурента+Символы.ПС+Символы.ПС+
				"<i>Форма оплаты: 
</i>"+Объект.ФормаОплатыАбитуриента+Символы.ПС+
				"<i>Тип аттестата: 
</i>"+Объект.ТипАттестатаАбитуриента+Символы.ПС+
				"<i>Приоритет зачисления: 
</i>"+Объект.ПриоритетЗачисленияАбитуриента;
				
	Ресурс = "bot" + Данные.Токен  + 
"/sendMessage?chat_id="+Данные.ИдентификаторНазначения+"&text="+Сообщение+"&parse_mode=HTML";
	Соединение  =  Новый HTTPСоединение(Данные.Сервер,443,,,,,Новый 
ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(Ресурс);
	Ответ = Соединение.Получить(Запрос);
	
	НовыйОтчетTelegram = Справочники.Уведомления.СоздатьЭлемент();
	НовыйОтчетTelegram.Наименование = "Уведомление Telegram от "+ТекущаяДата();	
	НовыйОтчетTelegram.Сообщение = Сообщение;
	НовыйОтчетTelegram.ФИО = Объект.Наименование;
	НовыйОтчетTelegram.Идентификатор = Данные.ИдентификаторНазначения;
	НовыйОтчетTelegram.Дата = ТекущаяДата();
	НовыйОтчетTelegram.Записать();
	
	Возврат Ответ.КодСостояния;	
	
КонецФункции

//Процедуры фильтрации дублей
&наСервере
Процедура ПроверкаОтчетTelegram()
	Если Справочники.Уведомления.НайтиПоРеквизиту("ФИО",Объект.Наименование).Пустая() Тогда
		СоздатьОтчетTelegram();
	КонецЕсли
	
КонецПроцедуры
&НаСервере
Процедура ПроверкаЗаявлениеНаПоступление()
	Если Документы.ЗаявлениеНаПоступление.НайтиПоРеквизиту("ФИОАбитуриента", 
Объект.Наименование).Пустая() Тогда
		СоздатьДокументЗаявлениеНаПоступление();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Счетчик = 0;
	
 	Если (Объект.ОценкиАбитуриента.Количество() < ВернутьКолвоПредметов()) Тогда;
		Пока (Счетчик < ВернутьКолвоПредметов()) Цикл
			Новаястрока = Объект.ОценкиАбитуриента.Добавить();
			Новаястрока.Предмет = ВернутьЗначениеПредметаПоИндексу(Счетчик);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОценкиАбитуриентаПриИзменении(Элемент)
	СуммаЗначений = 0;
	КоличествоЗначенийШоражников = 0;
	
	Для пацана = 0 По Объект.ОценкиАбитуриента.Количество()-1 Цикл
		Если ЗначениеЗаполнено(Объект.ОценкиАбитуриента[пацана].Оценка) Тогда
			ТекущаяОценка = Объект.ОценкиАбитуриента[пацана].Оценка;
			Если ((ТекущаяОценка < 2) или (ТекущаяОценка > 5)) Тогда
				Сообщить("Некорректный ввод оценки по дисциплине 
'"+Объект.ОценкиАбитуриента[пацана].Предмет+"'!");
			КонецЕсли;	
			КоличествоЗначенийШоражников = КоличествоЗначенийШоражников + 1;
			СуммаЗначений = СуммаЗначений + ТекущаяОценка;
		КонецЕсли;
	КонецЦикла;
	
	СреднееЗначение = СуммаЗначений / КоличествоЗначенийШоражников;
	Объект.СреднийБаллАбитуриента = СреднееЗначение;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	 
	ПроверкаОтчетTelegram();
	ПроверкаЗаявлениеНаПоступление();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКартинку(Команда)
	ИмяФайла = "";
	ПутьФайла = "";
	Если ПоместитьФайл(ПутьФайла, , ИмяФайла, Истина) = Истина Тогда
		Фото = ПутьФайла;
		УстановитьКартинку(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинку(ИмяФайла)

	НовыйФайлКартинки = Справочники.ФайлыСистемы.СоздатьЭлемент();
	НовыйФайлКартинки.Файл = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Фото));
	НовыйФайлКартинки.Наименование = ИмяФайла;
	НовыйФайлКартинки.Дата = ТекущаяДата();
	Фото = ПоместитьВоВременноеХранилище(НовыйФайлКартинки.Файл.Получить());
	НовыйФайлКартинки.Записать();
	Объект.ФотоАбитуриента = НовыйФайлКартинки.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Фото = ПолучитьНавигационнуюСсылку(Объект.ФотоАбитуриента, "Файл");
	Элементы.Фото.РазмерКартинки = РазмерКартинки.АвтоРазмер;
КонецПроцедуры

