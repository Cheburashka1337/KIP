//Подсчет предметов для табличной части 
Функция ВернутьКолвоПредметов()
	Возврат 
Перечисления.ПеречислениеПредметыПоступленияАбитуриентов.Количество(); 
КонецФункции
Функция ВернутьЗначениеПредметаПоИндексу(индекс_номер)
	Возврат 
Перечисления.ПеречислениеПредметыПоступленияАбитуриентов.Получить(индекс_номер);
КонецФункции

&НаСервере
Процедура СоздатьДокументЗаявлениеНаПоступление()

   НовоеЗаявление = Документы.ЗаявлениеНаПоступление.СоздатьДокумент();
   НовоеЗаявление.ФИОАбитуриента = Объект.Наименование;
   НовоеЗаявление.СпециальностьАбитуриента = 
Объект.СпециальностьАбитурента;
   НовоеЗаявление.СреднийБаллАбитуриента = 
Объект.СреднийБаллАбитуриента;
   НовоеЗаявление.ТипАттестатаАбитуриента  = 
Объект.ТипАттестатаАбитуриента;
   НовоеЗаявление.ПриоритетЗачисленияАбитуриента = 
Объект.ПриоритетЗачисленияАбитуриента;
   НовоеЗаявление.ФормаОплатыАбитуриента = 
Объект.ФормаОплатыАбитуриента;
   НовоеЗаявление.АдресАбитуриента = Объект.АдресАбитуриента;
   НовоеЗаявление.ДатаРожденияАбитуриента = 
Объект.ДатаРожденияАбитуриента;
   НовоеЗаявление.EmailАбитуриента = Объект.EmailАбитуриента;
   НовоеЗаявление.ТелефонАбитуриента = Объект.ТелефонАбитуриента;
   
   
   ФИОРодителя = Объект.РодительАбитуриента;
   НовоеЗаявление.ФИОРодительАбитуриента = ФИОРодителя;
   ОбъектРодителя = 
Справочники.РодителиАбитуриентов.НайтиПоНаименованию(ФИОРодителя);
   НовоеЗаявление.ДатаРожденияРодительАбитуриента = 
ОбъектРодителя.ГодРождения;
   НовоеЗаявление.АдресРодительАбитуриента = ОбъектРодителя.Адрес;
   НовоеЗаявление.EmailРодительАбитуриента = ОбъектРодителя.Email;
   НовоеЗаявление.ТелефонРодительАбитуриента = ОбъектРодителя.Телефон; 
   
   Для предмет = 0 По Объект.ОценкиАбитуриента.Количество()-1 Цикл
		НоваяСтрокаЗаписи = 
НовоеЗаявление.ОценкиАбитуриента.Добавить();
		НоваяСтрокаЗаписи.Предмет = 
Объект.ОценкиАбитуриента[предмет].Предмет;
		НоваяСтрокаЗаписи.Оценка = 
Объект.ОценкиАбитуриента[предмет].Оценка;
   КонецЦикла;
		
   Для документ = 0 По Объект.ДокументыАбитуриента.Количество()-1 Цикл
		НоваяСтрокаЗаписи = 
НовоеЗаявление.ДокументыАбитуриента.Добавить();
		НоваяСтрокаЗаписи.Документ = 
Перечисления.ПеречислениеДокументыАбитуриента.Получить(документ);			
		НоваяСтрокаЗаписи.Номер = 
Объект.ДокументыАбитуриента[документ].Номер;
   КонецЦикла;
		
   НовоеЗаявление.Дата = ТекущаяДата();
   
   НовоеЗаявление.Записать(РежимЗаписиДокумента.Проведение);   
	
КонецПроцедуры

//Процедуры фильтрации дублей
&наСервере
Процедура ПроверкаОтчетTelegram()
	Если 
Справочники.Уведомления.НайтиПоРеквизиту("ФИО",Объект.Наименование).Пустая() 
Тогда
		
		Сообщение = "<b>*Добавление нового 
абитуриента*</b>"+Символы.ПС+Символы.ПС+
				"<b>Основная информация</b>"+Символы.ПС+
				"ФИО: "+Объект.Наименование+Символы.ПС+
				"Сред. балл: 
"+Объект.СреднийБаллАбитуриента+Символы.ПС+
				"Специальность: 
"+Объект.СпециальностьАбитурента+Символы.ПС+Символы.ПС+
				"<b>Дополнительная 
информация</b>"+Символы.ПС+
				"Форма оплаты: 
"+Объект.ФормаОплатыАбитуриента+Символы.ПС+
				"Тип аттестата: 
"+Объект.ТипАттестатаАбитуриента+Символы.ПС+
				"Приоритет зачисления: 
"+Объект.ПриоритетЗачисленияАбитуриента;
		
СоздатьОтчетTelegram(Сообщение,Объект.Наименование,"Добавление нового 
абитуриента");
		
	КонецЕсли
КонецПроцедуры

&НаСервере
Процедура ПроверкаЗаявлениеНаПоступление()
	Если 
Документы.ЗаявлениеНаПоступление.НайтиПоРеквизиту("ФИОАбитуриента", 
Объект.Наименование).Пустая() Тогда
		СоздатьДокументЗаявлениеНаПоступление();
	КонецЕсли;
КонецПроцедуры
//Вызов процедур выше после записи
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи) Экспорт
	 
	ПроверкаОтчетTelegram();
	ПроверкаЗаявлениеНаПоступление();
		
КонецПроцедуры


//Процедуры вывода перечислений на форму
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Счетчик = 0;
	
 	Если (Объект.ОценкиАбитуриента.Количество() < 
ВернутьКолвоПредметов()) Тогда
		Пока (Счетчик < ВернутьКолвоПредметов()) Цикл
			Новаястрока = 
Объект.ОценкиАбитуриента.Добавить();
			Новаястрока.Предмет = 
ВернутьЗначениеПредметаПоИндексу(Счетчик);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ОценкиАбитуриентаПриИзменении(Элемент)
	СуммаЗначений = 0;
	КоличествоЗначенийШоражников = 0;
	Для пацана = 0 По Объект.ОценкиАбитуриента.Количество()-1 Цикл
		Если 
ЗначениеЗаполнено(Объект.ОценкиАбитуриента[пацана].Оценка) Тогда
			ТекущаяОценка = 
Объект.ОценкиАбитуриента[пацана].Оценка;
			Если ((ТекущаяОценка < 2) или (ТекущаяОценка > 
5)) Тогда
				Сообщить("Некорректный ввод оценки по 
дисциплине '"+Объект.ОценкиАбитуриента[пацана].Предмет+"'!");
			КонецЕсли;	
			КоличествоЗначенийШоражников = 
КоличествоЗначенийШоражников + 1;
			СуммаЗначений = СуммаЗначений + ТекущаяОценка;
		КонецЕсли;
	КонецЦикла;
	СреднееЗначение = СуммаЗначений / КоличествоЗначенийШоражников;
	Объект.СреднийБаллАбитуриента = СреднееЗначение;		
КонецПроцедуры

//Обработка картинок
&НаКлиенте
Процедура ДобавитьКартинку(Команда)
	ИмяФайла = "";
	ПутьФайла = "";
	Если ПоместитьФайл(ПутьФайла, , ИмяФайла, Истина) = Истина Тогда
		Фото = ПутьФайла;
		УстановитьКартинку(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры
&НаСервере
Процедура УстановитьКартинку(ИмяФайла)

	НовыйФайлКартинки = Справочники.ФайлыСистемы.СоздатьЭлемент();
	НовыйФайлКартинки.Файл = Новый 
ХранилищеЗначения(ПолучитьИзВременногоХранилища(Фото));
	НовыйФайлКартинки.Наименование = ИмяФайла;
	НовыйФайлКартинки.Дата = ТекущаяДата();
	Фото = 
ПоместитьВоВременноеХранилище(НовыйФайлКартинки.Файл.Получить());
	НовыйФайлКартинки.Записать();
	Объект.ФотоАбитуриента = НовыйФайлКартинки.Ссылка;
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Фото = ПолучитьНавигационнуюСсылку(Объект.ФотоАбитуриента, 
"Файл");
	Элементы.Фото.РазмерКартинки = РазмерКартинки.АвтоРазмер;
КонецПроцедуры

&НаСервере
Процедура СортировкаАбитуриентовСправочник()
	
	//Удаление
	Выборка = 
Справочники.СортировкаАбитуриентов.ВыбратьИерархически();
	Пока Выборка.Следующий() Цикл
	   ОбъектСправочника = Выборка.ПолучитьОбъект();
	   ОбъектСправочника.Удалить();
   КонецЦикла;
   
	КолвоЧеловекВГруппе = 2;
	
	Для ИндексСчетчика = 0 по 
Перечисления.ПеречислениеСпециальностейАбитуринта.Количество()-1 Цикл
			
			ИмяГруппы = 
Перечисления.ПеречислениеСпециальностейАбитуринта.Получить(ИндексСчетчика);
			НоваяГруппа = 
Справочники.СортировкаАбитуриентов.СоздатьГруппу();
		    НоваяГруппа.Наименование = ИмяГруппы;
		    НоваяГруппа.Записать();
		
		Запрос = Новый Запрос;
	    Запрос.Текст = 
	        "ВЫБРАТЬ
	        |   Наименование, СпециальностьАбитурента, 
СреднийБаллАбитуриента, ТипАттестатаАбитуриента, 
ПриоритетЗачисленияАбитуриента,
			|   ФормаОплатыАбитуриента, ФотоАбитуриента, 
РодительАбитуриента, АдресАбитуриента, EmailАбитуриента, 
ТелефонАбитуриента, ДатаРожденияАбитуриента
	        |ИЗ
	        |   Справочник.Абитуриенты КАК Абитуриенты
	        |УПОРЯДОЧИТЬ ПО
	        |   СреднийБаллАбитуриента";
	 
	    РезультатЗапроса = Запрос.Выполнить();
	    ВыборкаАбитуриентов = РезультатЗапроса.Выбрать();
		
		ОбщийСчетчикАбитуриентовДляГрупп = 0;
		Пока ВыборкаАбитуриентов.Следующий() Цикл
			Если 
(ВыборкаАбитуриентов.СпециальностьАбитурента = ИмяГруппы) Тогда
				ОбщийСчетчикАбитуриентовДляГрупп = 
ОбщийСчетчикАбитуриентовДляГрупп + 1;
			КонецЕсли;
		КонецЦикла;
		ВыборкаАбитуриентов.Сбросить();
		СчетчикЧеловекВГруппе = 0;
			Для СчетчикГрупп = 1 По 
(ОбщийСчетчикАбитуриентовДляГрупп/КолвоЧеловекВГруппе) Цикл
				НоваяПодгруппа = 
Справочники.СортировкаАбитуриентов.СоздатьГруппу();
		    	НоваяПодгруппа.Наименование = "Группа 
№"+СчетчикГрупп;
				НоваяПодгруппа.Родитель =  
НоваяГруппа.Ссылка;
		    	НоваяПодгруппа.Записать();
				
				Пока ВыборкаАбитуриентов.Следующий() 
Цикл
										
					Если 
(ВыборкаАбитуриентов.СпециальностьАбитурента = ИмяГруппы) Тогда

						Абитуриент = 
Справочники.СортировкаАбитуриентов.СоздатьЭлемент();
						Абитуриент.Родитель = 
НоваяПодгруппа.Ссылка;
						Абитуриент.Наименование 
= ВыборкаАбитуриентов.Наименование;
						//Перечисление всего, 
что возможно 
						Абитуриент.Записать();
						СчетчикЧеловекВГруппе = 
СчетчикЧеловекВГруппе + 1;	
						
						Если 
(СчетчикЧеловекВГруппе =  КолвоЧеловекВГруппе) Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
				
		
        //Сообщить(ВыборкаАбитуриентов.Наименование + 
ВыборкаАбитуриентов.СреднийБаллАбитуриента);
	
		//Пока ВыборкаАбитуриентов.Следующий() Цикл
		//	Если 
(ВыборкаАбитуриентов.СпециальностьАбитурента = ИмяГруппы) Тогда
		//		Абитуриент = 
Справочники.СортировкаАбитуриентов.СоздатьЭлемент();
		//		Абитуриент.Родитель = 
НоваяГруппа.Ссылка;
		//		Абитуриент.Наименование = 
ВыборкаАбитуриентов.Наименование;
		//		//Перечисление всего, что возможно 
		//		Абитуриент.Записать();
		//	КонецЕсли;
		//
		////Сообщить(ВыборкаАбитуриентов.Наименование + 
ВыборкаАбитуриентов.СреднийБаллАбитуриента);
		//КонецЦикла;
	КонецЦикла; 	
КонецПроцедуры

&НаКлиенте
Процедура Сортировка(Команда)
	СортировкаАбитуриентовСправочник();
КонецПроцедуры

