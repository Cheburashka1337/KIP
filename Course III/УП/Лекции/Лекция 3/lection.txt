class myclass{

		int a;
	public:
		myclass();
		//Деструктор
		~myclass();
		//Методы
		void set(int x){
			a=x;
		}

		void show();
};

Конструктор класса - это такой метод класса, который называется точно также, как класс и запускается при создании объекта автоматически. Обычно это необходимо при инициализации полей класса при создании объекта. (Когда мы сообщаем изначальные установки к каждому созданному объекту)

Конструктор класса не имеет возвращаемого значения и никогда ничего не возвращает. Может принимать параметры, не принимать или принимать по умолчанию

Случай 1
mycalss(){
	a=0;
}

Случай 2
myclass(int n){
	a=n;
}

Случай 3
mycalss(int n=5){
	a=n;
}

//Создание объекта: 

Случай 1
myclass ob1;

Случай 2
myclass ob1(5);
//Передача значения конструктору возможна толкьо тогда, когда он открытый.

Случай 3
myclass ob2;
myclass ob2(4);
//Возможно использование обоих вариантов.

Если мы код пишем сразу в классе, то эта функция будет встроенной. В тех полях, где она вызывается,будет встроен этот код, что ведет к более быстрой работе программы, но она увеличивается в объеме.
Если функция большая, то ее лучше описать вне класса и делается это следующим образом: 

//Конструктор
myclass::myclass(){
	cout<<"Конструктор\n";
	a=0;
}

//Деструктор
myclass::~myclass(){
	cout<<"Деструктор\n";
}

//Функция
void myclass::show(int m){
	cout<<"a = "<<a<<"\nm="<<m<<"\n";
}

Также встраивать код можно с помощью inline:
inline void print_myname(int m);

						Присваивание объектов
	Присваивать объекты можно, только если они одного класса


=НОРМРАСП(B40;B37;B38;1)-НОРМРАСП(B39;B37;B38;1)
=НОРМАЛИЗАЦИЯ(B41;B37;B38)
=НОРМОБР(B49;B47;B48)
=НОРМРАСП(B50;B47;B48;1)
=НОРМРАСП(B60;B57;B58;1)-НОРМРАСП(B59;B57;B58;1)
//
=НОРМРАСП(D89;A89;B89;1)-НОРМРАСП(C89;A89;B89;1)